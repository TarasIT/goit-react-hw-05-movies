{"version":3,"file":"static/js/186.28f2f250.chunk.js","mappings":"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","sources":["components/MoviesRequest/MoviesRequest.jsx","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const TREND_MOVIES_URL = 'https://api.themoviedb.org/3/trending/movie/day?';\nconst SEARCH_MOVIES_URL = 'https://api.themoviedb.org/3/search/movie?';\nconst MOVIE_INFO_URL = 'https://api.themoviedb.org/3/movie/';\nconst KEY = '308ba57d7f6135bbdbfbab5697860db3';\n\nexport const trendMoviesRequest = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: KEY,\n  });\n  const response = await fetch(`${TREND_MOVIES_URL}${searchParams}`);\n  if (!response.ok) {\n    return Promise.reject(\n      new Error(`Something went wrong with trend movies :(`)\n    );\n  }\n  return response.json();\n};\n\nexport const searchMoviesByKeyWord = async movie => {\n  const searchParams = new URLSearchParams({\n    api_key: KEY,\n    query: movie,\n  });\n  const response = await fetch(`${SEARCH_MOVIES_URL}${searchParams}`);\n  if (!response.ok) {\n    return Promise.reject(\n      new Error(`There are no movies for query '${movie}'!`)\n    );\n  }\n  return response.json();\n};\n\nexport const movieInfoRequest = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: KEY,\n  });\n  const response = await fetch(`${MOVIE_INFO_URL}${id}?${searchParams}`);\n  if (!response.ok) {\n    return Promise.reject(\n      new Error(`There are no information about the movie!`)\n    );\n  }\n  return response.json();\n};\n\nexport const movieCastRequest = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: KEY,\n  });\n  const response = await fetch(\n    `${MOVIE_INFO_URL}${id}/credits?${searchParams}`\n  );\n  if (!response.ok) {\n    return Promise.reject(new Error(`There is no cast of the movie!`));\n  }\n  return response.json();\n};\n\nexport const movieReviewsRequest = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: KEY,\n  });\n  const response = await fetch(\n    `${MOVIE_INFO_URL}${id}/reviews?${searchParams}`\n  );\n  if (!response.ok) {\n    return Promise.reject(new Error(`There are no reviews of the movie!`));\n  }\n  return response.json();\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieReviewsRequest } from 'components/MoviesRequest/MoviesRequest';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const reviews = await movieReviewsRequest(movieId);\n        setMovieReviews(reviews.results);\n      } catch (err) {\n        console.error(err);\n      }\n    })();\n  }, [movieId]);\n\n  if (!movieReviews) return;\n\n  return (\n    <>\n      {movieReviews.length !== 0 ? (\n        movieReviews.map(({ author, id, content }) => {\n          return (\n            <div key={id}>\n              <h3>{author}:</h3>\n              <p>\"{content}\"</p>\n            </div>\n          );\n        })\n      ) : (\n        <h2>There are no reviews of the movie yet :(</h2>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MOVIE_INFO_URL","KEY","trendMoviesRequest","searchParams","URLSearchParams","api_key","fetch","response","ok","Promise","reject","Error","json","searchMoviesByKeyWord","movie","query","movieInfoRequest","id","movieCastRequest","movieReviewsRequest","useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","reviews","results","console","error","length","map","author","content","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}